import json
from datetime import datetime

from aiogram.types import Message
from loguru import logger

from db.database import create_user_table
from utils.dispatcher import router, ADMIN_CHAT_ID
from utils.file_utils import save_data_to_json

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Å–ª–æ–≤–∞—Ä–∏ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
notified_users = {}
answered_users = {}

# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
def save_user_message(user_id: int, message_text: str):
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–∞–±–ª–∏—Ü–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    try:
        # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –ø–æ–ª—É—á–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        UserMessageTable = create_user_table(user_id)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–∞–±–ª–∏—Ü–µ
        UserMessageTable.create(user_id=user_id, message_text=message_text)
        print(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ —Ç–∞–±–ª–∏—Ü–µ {UserMessageTable._meta.table_name}.")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")


@router.business_message()
async def handle_business_message(message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è.
    –ï—Å–ª–∏ —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è, –±–æ—Ç –æ—Ç–≤–µ—á–∞–µ—Ç, –µ—Å–ª–∏ –Ω–µ—Ç - –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç.
    –¢–∞–∫–∂–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ø–∞—Ä–æ–ª–µ–º.
    """
    try:

        message_text = message.text

        user_id = message.from_user.id
        user_data = {
            "user_id": user_id,
            "user_bot": message.from_user.is_bot,
            "user_first_name": message.from_user.first_name,
            "user_last_name": message.from_user.last_name,
            "user_username": message.from_user.username,
            "user_language_code": message.from_user.language_code,
            "user_is_premium": message.from_user.is_premium,
            "user_added_to_attachment_menu": message.from_user.added_to_attachment_menu,
            "user_can_join_groups": message.from_user.can_join_groups,
            "user_can_read_all_group_messages": message.from_user.can_read_all_group_messages,
            "user_supports_inline_queries": message.from_user.supports_inline_queries,
            "user_can_connect_to_business": message.from_user.can_connect_to_business,
            "user_has_main_web_app": message.from_user.has_main_web_app
        }

        # –õ–æ–≥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID: {user_id}. Username: {message.from_user.username}, "
                    f"–§–∞–º–∏–ª–∏—è: {message.from_user.last_name}, –ò–º—è: {message.from_user.first_name} –Ω–∞–ø–∏—Å–∞–ª —Å–æ–æ–±—â–µ–Ω–∏–µ.")

        file_path = f"data/{user_id}.json"

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ JSON
        save_data_to_json(data=user_data, file_path=file_path)

        logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_data} –∑–∞–ø–∏—Å–∞–Ω—ã –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã")

        save_user_message(user_id, message_text)

        error_list = ["–æ—à–∏–±–∫–∞", "–æ—à–∏–±–∫–∏"]
        pass_list = ["–ø–∞—Ä–æ–ª—è", "–ø–∞—Ä–æ–ª—å"]

        try:
            # message_text = message.text.lower()
            user_id = message.from_user.id
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–ª–æ–≤–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –æ—à–∏–±–æ–∫
            if any(word in message_text for word in error_list) and user_id != int(ADMIN_CHAT_ID):
                await message.reply(
                    "üìÑ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ª–æ–≥-—Ñ–∞–π–ª –º–æ–µ–º—É –ø–æ–º–æ—â–Ω–∏–∫—É: [@h24service_bot](https://t.me/h24service_bot) ü§ñ.\n\n"
                    "‚ú® –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –±—ã—Å—Ç—Ä–æ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å –ø—Ä–æ–±–ª–µ–º–æ–π. –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ log —Ñ–∞–π–ª—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –≤ –ª–∏—á–∫—É –Ω–µ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—é—Ç—Å—è. –°–ø–∞—Å–∏–±–æ –∑–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ! üåü",
                    parse_mode="Markdown"
                )
                return
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–ª–æ–≤–∞, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ø–∞—Ä–æ–ª–µ–º
            if any(word in message_text for word in pass_list) and user_id != int(ADMIN_CHAT_ID):
                await message.reply(
                    "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ—Å–µ—Ç–∏—Ç–µ –º–æ–µ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞: [@h24service_bot](https://t.me/h24service_bot) ü§ñ.\n"
                    "üîë –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–∞—Ä–æ–ª—å, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª:\n"
                    "[üì≤ –ü–µ—Ä–µ–π—Ç–∏ –∫ –∫–∞–Ω–∞–ª—É](https://t.me/+uE6L_wey4c43YWEy) üì¨.\n\n"
                    "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ! üåü",
                    parse_mode="Markdown"
                )
        except AttributeError:
            pass


        # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –∏ —á–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ä–∞–±–æ—á–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
        with open('messages/working_hours.json', 'r') as file:
            data = json.load(file)

        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –Ω–∞—á–∞–ª–µ –∏ –∫–æ–Ω—Ü–µ —Ä–∞–±–æ—á–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
        start_hour = int(data['start']['hour'])
        start_minute = int(data['start']['minute'])
        end_hour = int(data['end']['hour'])
        end_minute = int(data['end']['minute'])

        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
        current_time = datetime.now()
        current_hour = current_time.hour
        current_minute = current_time.minute

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è —Ä–∞–±–æ—á–∏–º
        is_working_time = (
                (start_hour < current_hour < end_hour) or
                (current_hour == start_hour and current_minute >= start_minute) or
                (current_hour == end_hour and current_minute < end_minute)
        )

        if is_working_time:
            # –ï—Å–ª–∏ —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è, –æ—á–∏—â–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —É–≤–µ–¥–æ–º–ª–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö
            if user_id in notified_users:
                del notified_users[user_id]

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–≤–µ—á–∞–ª –ª–∏ –±–æ—Ç —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è
            if user_id not in answered_users:
                await message.reply(
                    "‚úÖ **–°–µ–π—á–∞—Å —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è!**\n\n"
                    "üïê –í–∞—à –∑–∞–ø—Ä–æ—Å –±—É–¥–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è. –ü–æ–∫–∞ —è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤–∞—à –≤–æ–ø—Ä–æ—Å, "
                    "–ø—Ä–∏–≥–ª–∞—à–∞—é –≤–∞—Å –∑–∞–≥–ª—è–Ω—É—Ç—å –Ω–∞ –º–æ–π –∫–∞–Ω–∞–ª: "
                    "[üì≤ –û—Ç–∫—Ä–æ–π—Ç–µ –∫–∞–Ω–∞–ª](https://t.me/+uE6L_wey4c43YWEy) üì¨.\n\n"
                    "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ —Ç–µ—Ä–ø–µ–Ω–∏–µ! üòä"
                    , parse_mode="Markdown")
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –Ω–µ –æ—Ç–≤–µ—á–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ
                answered_users[user_id] = True
        else:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É–≤–µ–¥–æ–º–ª—è–ª–∏ –ª–∏ –º—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä–∞–Ω–µ–µ –≤ –Ω–µ—Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è
            if user_id not in notified_users:
                await message.reply(
                    "‚ùå **–°–µ–π—á–∞—Å –Ω–µ—Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è!**\n\n"
                    "üåô –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –¥–æ –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—á–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏, –∏ –≤–∞—à –∑–∞–ø—Ä–æ—Å –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω. "
                    "–ü–æ–∫–∞ —è –Ω–µ –º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å, –Ω–æ –≤—ã –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –º–æ–∏–º –∫–∞–Ω–∞–ª–æ–º: "
                    "[üì≤ –ü–æ—Å–µ—Ç–∏—Ç–µ –∫–∞–Ω–∞–ª](https://t.me/+uE6L_wey4c43YWEy) üì¨.\n\n"
                    "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –∏ —Ç–µ—Ä–ø–µ–Ω–∏–µ! üåü"
                    , parse_mode="Markdown")
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –Ω–µ—Ä–∞–±–æ—á–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
                notified_users[user_id] = True

            # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ä–∞–±–æ—á–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏, —á—Ç–æ–±—ã –±–æ—Ç —Å–Ω–æ–≤–∞ –º–æ–≥ –æ—Ç–≤–µ—Ç–∏—Ç—å –≤ —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è
            if user_id in answered_users:
                del answered_users[user_id]
    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")


def register_handle_business_message():
    router.business_message.register(handle_business_message)


if __name__ == "__main__":
    register_handle_business_message()
